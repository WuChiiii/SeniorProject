基因演算法解排課系統

首先編碼:
1.教受每個人均有一個大小為1的一維陣列，內容物為(教授名稱) 
	ex:arr[5]="楊慶隆"

2.教授每個人均有一7*12陣列，內容物為0或1，0代表沒課1代表有課，假設共有n個教授此資料表為一個n*7*12陣列 

3.教室每間均有一個大小為3的一維陣列，內容物為(教室編號、教室容納人數、教室種類) 
	ex:arr[5][0]="B305"(第五間教室的編號為B305)
	   arr[5][1]="35"(第五間教室的人數限制為35人)
	   arr[5][2]="1"(第五間教室的5種類為電腦教室，非電腦教室編號為1)

4.教室每一間均有一7*12陣列，內容物為0或1，0代表此時段沒人用教室1代表此時段有人用，一樣m間教室的話此資料表就會是一個m*7*12的陣列 

5.存在一個課堂資訊資料表，此資料表順序為admin那邊add subject的優先順序，每個row都有授課教師、授課人數、授課時間、開課年級、必修選修、需要電腦教室嗎?
  也就是每個row都有7個column

6.存在一資料表為初始排課所需的暫存資料表，大小可能為50或100每一份會有:6*7*12(總共6個年級，一禮拜7天，一天12堂課)可能資料表為50*6*7*12陣列(以上陣列皆可用class or struct實作)

7.最後經由大量運算後儲存的資料表大小為6*7*12

演算法流程:(粗略講)
1.目前有上述第5點的課堂資料，經由年級排序後由低年級開始塞入第6個資料表中，每次塞的順序都是隨機的(隨機從任何一天的任何一堂開始)，若此堂課無法塞入當下隨機產生的時間的話就依照順序往下找(舉例:
  若剛好這次填表隨機到第一天的9.這時間的教室沒地方可以用了或是有同年級的課了就往禮拜一下午開始找直到可以填入)，若一直無法填入課表則此年級重塞，重塞10次還是無法完成就退到上個年級也重塞，
  (電腦教室無法塞入的話優先塞非電腦教室)，6年級皆塞完及一組解，直到50組解若到了某個瓶頸像是連續20次重塞失敗就直接退出完成50份初始解的動作

2.計算50份表中每一份表的適合度，若有違反規定的就加上一個penalty(像是剛才電腦教室塞入非電腦教室及視為一個penalty)，每個penalty都有加權計算完6個年級的之後找出最合適的，若6個年級的penalty加總為0
  即可直接回傳此資料表。

3.以機率輪盤法實作交配，即取50組解中的2組解進行單點交配，方法為選一位老師，將兩組解老師的課表交換，若不影響原則就是交配成功，若遇到撞課問題則回到一開始塞初始解那邊依照當下撞課順序往後找找到合
  適的空教室以及時間即可，若找不到則重新排列當下那個年級的課表，還是無法排入則放棄此次這兩組交配的對象重新找兩組交配。

4.當交配完的同時以機率決定新的解需要突變與否，隨機選擇當下一組解進行突變，隨機選擇兩堂課在不影響規定下交換，此交換必須是同屬性的，也就是電腦教室換電腦教室。
